# отчеты
from time import strftime

import pandas as pd
from datetime import datetime


def info_decorator(func):
    def info(*arg, **kwargs):
        result = func(*arg, **kwargs)
        with open("infa", "w") as file:
            writ = file.write(result)
        return writ
    return info


def info_decorator_file(func,file):
    def info(*arg, **kwargs):
        result = func(*arg, **kwargs)
        with open(file, "w") as f:
            writ = f.write(result)
        return writ
    return info


def spending_category(df, category, date=datetime.now()):
    """ Функция возвращает траты по заданной категории
    за последние 3 месяца (от переданной даты). """
    cat = []

    for dict_data in df:
        a = datetime.strptime((dict_data.get('Дата операции')), "%Y.%m.%d %H:%M:%S")
        print(a)
        if dict_data.get("Категория") == category and a.date() ==  date:
            cat.append(dict_data)
            print(cat)






result = [
        {
            'Дата операции': '27.11.2018 22:40:20',
            'Дата платежа': '29.11.2018',
            'Номер карты': '*7197',
            'Статус': 'OK',
            'Сумма операции': -485.0,
            'Валюта операции': 'RUB',
            'Сумма платежа': -485.0,
            'Валюта платежа': 'RUB',
            'Кэшбэк': "nan",
            'Категория': 'Фастфуд',
            'MCC': 5814.0,
            'Описание': 'Теремок',
            'Бонусы (включая кэшбэк)': 9,
            'Округление на инвесткопилку': 0,
            'Сумма операции с округлением': 485.0
        },
        {
            'Дата операции': '27.11.2018 16:06:21',
            'Дата платежа': '29.11.2018',
            'Номер карты': '*7197',
            'Статус': 'OK',
            'Сумма операции': -200.0, 'Валюта операции': 'RUB', 'Сумма платежа': -200.0, 'Валюта платежа': 'RUB',
            'Кэшбэк': "nan",
            'Категория': 'Ж/д билеты', 'MCC': 4111.0, 'Описание': 'Метро Санкт-Петербург',
            'Бонусы (включая кэшбэк)': 4,
            'Округление на инвесткопилку': 0, 'Сумма операции с округлением': 200.0},
        {
            'Дата операции': '27.11.2018 13:41:48', 'Дата платежа': '29.11.2018', 'Номер карты': '*7197',
         'Статус': 'OK',
         'Сумма операции': -215.38, 'Валюта операции': 'RUB', 'Сумма платежа': -215.38, 'Валюта платежа': 'RUB',
         'Кэшбэк': "nan",
         'Категория': 'Супермаркеты', 'MCC': 5499.0, 'Описание': 'Колхоз', 'Бонусы (включая кэшбэк)': 4,
         'Округление на инвесткопилку': 0, 'Сумма операции с округлением': 215.38},
        {
            'Дата операции': '26.11.2018 15:56:29', 'Дата платежа': '28.11.2018', 'Номер карты': '*7197',
         'Статус': 'OK',
         'Сумма операции': -67.29, 'Валюта операции': 'RUB', 'Сумма платежа': -67.29, 'Валюта платежа': 'RUB',
         'Кэшбэк': "nan",
         'Категория': 'Аптеки', 'MCC': 5411.0, 'Описание': 'Пятёрочка', 'Бонусы (включая кэшбэк)': 1,
         'Округление на инвесткопилку': 0, 'Сумма операции с округлением': 67.29},
        {'Дата операции': '26.11.2018 15:44:09', 'Дата платежа': '28.11.2018', 'Номер карты': '*7197',
         'Статус': 'OK',
         'Сумма операции': -53.0, 'Валюта операции': 'RUB', 'Сумма платежа': -53.0, 'Валюта платежа': 'RUB',
         'Кэшбэк': "nan",
         'Категория': 'Аптеки', 'MCC': 5912.0, 'Описание': 'Аптека Радуга', 'Бонусы (включая кэшбэк)': 1,
         'Округление на инвесткопилку': 0, 'Сумма операции с округлением': 53.0}]


print(spending_category(result, "Аптеки", "26.11.2018"))